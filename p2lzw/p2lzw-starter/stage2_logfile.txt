Current Status:

The most challenging aspect has been implementing the pruning logic effectively 
within the decode function. Initially, I was unaware that pruning was required 
for decode, and understanding the nuances of the pruning process has proven to 
be more complex than anticipated.


Changes Made:
Converted the encode hash table into a dictionary, which helped streamline 
key-value mappings.
Printed separate DBG tables for the "before" and "after" pruning stages to better 
visualize and compare results, assisting in pinpointing discrepancies during 
debugging.

Consulted Bern for advice on how to do pruning. Turns out my logic is completely 
wrong. There's an off-by-one issue in the end. This was solved by updating
the dictionary once again.


Current Challenges:
Pruning Logic: I am finding it particularly challenging to implement the pruning
 logic in a way that functions correctly, especially for large files.
Debugging Pruning: Although the logic appears sound in theory, it does not perform
 as expected in practice. This is evident when working with larger files, where 
 pruning should optimize processing but instead fails or creates inconsistencies.
Pruning requires significant logical thinking, more than initially anticipated, 
as it involves maintaining the integrity of the data while systematically 
removing unnecessary elements.

The indices always go wrong, and I am unable to fully "skip" entries, neither 
do I full grasp how to use DBG to debug. 